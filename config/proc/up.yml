# RECIPE:Depurar con XDebug y Visual Studio Code:
# 1. Instalar extensiones de Visual Studio Code
#    - PHP Debug (https://marketplace.visualstudio.com/items?itemName=xdebug.php-debug)
# 2. Establecer el fichero de configuración (launch.json)
# ```console
# {
#   "version": "0.2.0",
#   "configurations": [
#     {
#       "name": "XDebug",
#       "type": "php",
#       "request": "launch",
#       "port": 9003,
#       "pathMappings": {
#         "/var/www/html": "${workspaceFolder}"
#       },
#       "xdebugSettings": {
#         "max_data": 65535,
#         "show_hidden": 1,
#         "max_children": 100,
#         "max_depth": 5
#       }
#     }
#   ]
# }
# ```
# 3. En Visual Studio Code iniciar depuración
# :RECIPE

example:
 - (({}.tmp.proc.sig))

task:
  require:
    config:
      - .*(\.local) origin
  do:
    - { event: 'origin startup' }
    - 
      check:
        data: 
          -
            key: (({}.env._this._config_name))
            is: not equal
            value: "@dm.proxy.local"
        true:
          - { call: exec, args: { cmd: "(({}.exec)) dm.proxy.up (({}.optSig))" }}
    - check:
        data: 
          -
            key: (({origin}.appsetting.stack))
            is: decoded
        true:
          - { call: exec, args: { cmd: "(({}.exec)) (({origin}._config_name)) dm.init (({}.optSig))" }}
    - { call: dm.setUp }
    - { call: exec, args: { cd: "(({}.var.setup_home_root))", cmd: "(({}.var.setup_compose_cmd))", out: true }}
    - { event: 'origin windup' }