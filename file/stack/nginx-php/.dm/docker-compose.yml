networks:
  dm_proxy:
    external: true 

services:
 
  www:
    container_name: ${COMPOSE_PROJECT_NAME}-www
    hostname: ${COMPOSE_PROJECT_NAME}-www
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.www
      args:
        APPSETTING_USER: ${APPSETTING_USER}
        APPSETTING_UID: ${APPSETTING_UID}
        APPSETTING_GID: ${APPSETTING_GID}
        APPSETTING_ENV: ${APPSETTING_ENV}
        APPSETTING_SERVICE_WWW_BASE_IMAGE: ${APPSETTING_SERVICE_WWW_BASE_IMAGE}
        APPSETTING_SERVICE_WWW_PHP_RELEASE: ${APPSETTING_SERVICE_WWW_PHP_RELEASE}
        APPSETTING_SERVICE_WWW_COMPOSER_RELEASE: ${APPSETTING_SERVICE_WWW_COMPOSER_RELEASE}
    working_dir: /var/www/html/
    volumes:
      - 
        consistency: cached
        source: ../wwwroot
        target: /var/www/html
        type: bind
    healthcheck:
      interval: 1s
      retries: 120
      start_period: 2m0s
      timeout: 2m0s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.rule=Host(`${APPSETTING_SERVICE_WWW_HOST}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.entrypoints=websecure"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_www.loadbalancer.server.port=443"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_www.loadbalancer.server.port=80"
    networks:
      - dm_proxy