networks:
  dm_proxy:
    external: true 

volumes:
  db_data:
    name: ${COMPOSE_PROJECT_NAME}-db_data

services:

  db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.db
      args:
        APPSETTING_SERVICE_DB_BASE_IMAGE: ${APPSETTING_SERVICE_DB_BASE_IMAGE}
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: ${APPSETTING_SERVICE_DB_NAME}
      MYSQL_USER: ${APPSETTING_SERVICE_DB_USER}
      MYSQL_PASSWORD: ${APPSETTING_SERVICE_DB_PASS}
      MARIADB_AUTO_UPGRADE: true
    command: [
        '--wait_timeout=28800',
        '--max_allowed_packet=1024M'
    ]
    restart: unless-stopped
    volumes:
      - ./entrypoint/docker-entrypoint.db.init.sql:/docker-entrypoint-initdb.d/docker-entrypoint.db.init.sql
      - db_data:/var/lib/mysql
    labels:
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_db.loadbalancer.server.port=3306"
    networks:
      - dm_proxy
    
  pma:
    container_name: ${COMPOSE_PROJECT_NAME}-pma
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.pma
      args:
        APPSETTING_SERVICE_PMA_BASE_IMAGE: ${APPSETTING_SERVICE_PMA_BASE_IMAGE}
    links:
      - db
    environment:
      MYSQL_ROOT_PASSWORD: root
      PMA_HOST: ${COMPOSE_PROJECT_NAME}-db
      PMA_USER: ${APPSETTING_SERVICE_DB_USER}
      PMA_PASSWORD: ${APPSETTING_SERVICE_DB_PASS}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_pma.rule=Host(`${APPSETTING_SERVICE_PMA_HOST_UI}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_pma.tls=true"
    networks:
      - dm_proxy
    depends_on:
      - db

  mailhog:
    container_name: ${COMPOSE_PROJECT_NAME}-mailhog
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.mailhog
      args:
        APPSETTING_SERVICE_MAILHOG_BASE_IMAGE: ${APPSETTING_SERVICE_MAILHOG_BASE_IMAGE}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailhog.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailhog.rule=Host(`${APPSETTING_SERVICE_MAILHOG_HOST_UI}`)"
      # SMTP Server
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_mailhog.loadbalancer.server.port=1025"
      # Web UI
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
    networks:
      - dm_proxy

  www:
    container_name: ${COMPOSE_PROJECT_NAME}-www
    hostname: ${COMPOSE_PROJECT_NAME}-www
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.www
      args:
        APPSETTING_USER: ${APPSETTING_USER}
        APPSETTING_UID: ${APPSETTING_UID}
        APPSETTING_GID: ${APPSETTING_GID}
        APPSETTING_ENV: ${APPSETTING_ENV}
        APPSETTING_SERVICE_WWW_BASE_IMAGE: ${APPSETTING_SERVICE_WWW_BASE_IMAGE}
    working_dir: ${APPSETTING_SERVICE_WWW_TARGET}
    volumes:
      - 
        consistency: cached
        source: ${APPSETTING_SERVICE_WWW_SOURCE}
        target: ${APPSETTING_SERVICE_WWW_TARGET}
        type: bind
      - 
        consistency: cached
        source: ./custom
        target: /root/custom
        type: bind
    healthcheck:
      interval: 1s
      retries: 120
      start_period: 2m0s
      timeout: 2m0s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.rule=Host(`${APPSETTING_SERVICE_WWW_HOST_UI}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.entrypoints=websecure"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_www.loadbalancer.server.port=443"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_www.loadbalancer.server.port=80"
    networks:
      - dm_proxy